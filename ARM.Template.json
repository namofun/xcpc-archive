{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "logWorkspaceRG": {
      "type": "string"
    },
    "logWorkspaceName": {
      "type": "string"
    },
    "appInsightsName": {
      "type": "string"
    },
    "cosmosDbName": {
      "type": "string"
    },
    "enableCosmosDbFreeTier": {
      "type": "bool",
      "defaultValue": false
    },
    "storageAccountName": {
      "type": "string",
      "maxLength": 24
    },
    "aadApplicationGuid": {
      "type": "string"
    },
    "storageAccountAccessTier": {
      "type": "string",
      "defaultValue": "Cool",
      "allowedValues": ["Cool", "Hot"]
    },
    "hostingPlanName": {
      "type": "string"
    },
    "hostingPlanSku": {
      "type": "string",
      "defaultValue": "B1",
      "allowedValues": ["B1", "B2", "B3", "S1", "S2", "S3", "P1v2", "P2v2", "P3v2"]
    },
    "appServiceName": {
      "type": "string"
    }
  },
  "variables": {
    "location": "[resourceGroup().location]",
    "appInsightsCollectorName": "[concat(deployment().name, '-appinsights-collector')]",
    "logWorkspaceId": "[resourceId(parameters('logWorkspaceRG'), 'Microsoft.OperationalInsights/workspaces', parameters('logWorkspaceName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2021-10-15",
      "name": "[parameters('cosmosDbName')]",
      "location": "[variables('location')]",
      "tags": {
        "defaultExperience": "Core (SQL)",
        "hidden-cosmos-mmspecial": ""
      },
      "kind": "GlobalDocumentDB",
      "properties": {
        "databaseAccountOfferType": "Standard",
        "locations": [
          {
            "failoverPriority": 0,
            "locationName": "[variables('location')]"
          }
        ],
        "backupPolicy": {
          "type": "Periodic",
          "periodicModeProperties": {
            "backupIntervalInMinutes": 1440,
            "backupRetentionIntervalInHours": 48,
            "backupStorageRedundancy": "Geo"
          }
        },
        "isVirtualNetworkFilterEnabled": false,
        "virtualNetworkRules": [],
        "ipRules": [],
        "dependsOn": [],
        "enableMultipleWriteLocations": false,
        "capabilities": [],
        "enableFreeTier": "[parameters('enableCosmosDbFreeTier')]",
        "capacity": {
          "totalThroughputLimit": 4000
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "name": "[variables('appInsightsCollectorName')]",
      "properties": {
        "mode": "Incremental",
        "parameters": {
          "appInsightsName": {
            "value": "[parameters('appInsightsName')]"
          },
          "logWorkspaceId": {
            "value": "[variables('logWorkspaceId')]"
          },
          "logWorkspaceLocation": {
            "value": "[reference(variables('logWorkspaceId'), '2021-06-01', 'FULL').location]"
          }
        },
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "template": {
          "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "appInsightsName": {
              "type": "string"
            },
            "logWorkspaceId": {
              "type": "string"
            },
            "logWorkspaceLocation": {
              "type": "string"
            }
          },
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02-preview",
              "name": "[parameters('appInsightsName')]",
              "location": "[parameters('logWorkspaceLocation')]",
              "properties": {
                "ApplicationId": "[parameters('appInsightsName')]",
                "Application_Type": "web",
                "Flow_Type": "Redfield",
                "Request_Source": "IbizaAIExtension",
                "WorkspaceResourceId": "[parameters('logWorkspaceId')]"
              }
            }
          ],
          "outputs": {
            "instrumentationKey": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName'))).InstrumentationKey]"
            },
            "connectionString": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName'))).ConnectionString]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-08-01",
      "name": "[parameters('storageAccountName')]",
      "location": "[variables('location')]",
      "dependsOn": [],
      "tags": {},
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "accessTier": "[parameters('storageAccountAccessTier')]",
        "minimumTlsVersion": "TLS1_2",
        "supportsHttpsTrafficOnly": true,
        "allowBlobPublicAccess": true,
        "allowSharedKeyAccess": true,
        "allowCrossTenantReplication": false,
        "defaultToOAuthAuthentication": false,
        "networkAcls": {
          "bypass": "AzureServices",
          "defaultAction": "Allow",
          "ipRules": []
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2021-08-01",
      "name": "[concat(parameters('storageAccountName'), '/default')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]"
      ],
      "properties": {
        "restorePolicy": {
          "enabled": false
        },
        "deleteRetentionPolicy": {
          "enabled": true,
          "days": 7
        },
        "containerDeleteRetentionPolicy": {
          "enabled": true,
          "days": 7
        },
        "changeFeed": {
          "enabled": false
        },
        "isVersioningEnabled": true
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices",
      "apiVersion": "2021-08-01",
      "name": "[concat(parameters('storageAccountName'), '/default')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'), '/blobServices/default')]"
      ],
      "properties": {
        "shareDeleteRetentionPolicy": {
          "enabled": true,
          "days": 7
        }
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-11-01",
      "name": "[parameters('hostingPlanName')]",
      "location": "[variables('location')]",
      "dependsOn": [],
      "tags": {},
      "sku": {
        "name": "[parameters('hostingPlanSku')]"
      },
      "kind": "linux",
      "properties": {
        "name": "[parameters('hostingPlanName')]",
        "workerSize": "0",
        "workerSizeId": "0",
        "numberOfWorkers": "1",
        "reserved": true,
        "zoneRedundant": false
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "name": "[parameters('appServiceName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
        "[variables('appInsightsCollectorName')]",
        "[concat('Microsoft.DocumentDB/databaseAccounts/', parameters('cosmosDbName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'), '/blobServices/default')]",
        "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'), '/fileServices/default')]"
      ],
      "tags": {},
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "name": "[parameters('appServiceName')]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(variables('appInsightsCollectorName')).outputs.instrumentationKey.value]"
            },
            {
              "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
              "value": "[reference(variables('appInsightsCollectorName')).outputs.connectionString.value]"
            },
            {
              "name": "ConnectionStrings__CosmosDb",
              "value": "[concat('AccountEndpoint=', reference(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbName'))).documentEndpoint, ';AccountKey=', listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbName')), '2021-10-15-preview').primaryMasterKey, ';')]"
            },
            {
              "name": "ConnectionStrings__StorageBlobs",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2021-08-01').keys[0].value, ';EndpointSuffix=', environment().suffixes.storage)]"
            }
          ],
          "linuxFxVersion": "DOTNETCORE|6.0",
          "http20Enabled": true,
          "alwaysOn": true
        },
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]",
        "clientAffinityEnabled": false
      }
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2020-09-01",
      "name": "[concat(parameters('appServiceName'), '/authsettingsV2')]",
      "dependsOn": [
        "[concat('Microsoft.Web/sites/', parameters('appServiceName'))]"
      ],
      "properties": {
        "platform": {
          "enabled": true
        },
        "globalValidation": {
          "requireAuthentication": true,
          "unauthenticatedClientAction": "AllowAnonymous"
        },
        "identityProviders": {
          "azureActiveDirectory": {
            "enabled": true,
            "registration": {
              "openIdIssuer": "[concat(environment().authentication.loginEndpoint, subscription().tenantId, '/v2.0')]",
              "clientId": "[parameters('aadApplicationGuid')]"
            },
            "login": {
              "disableWWWAuthenticate": false
            }
          }
        },
        "login": {
          "tokenStore": {
            "enabled": true
          }
        },
        "httpSettings": {
          "requireHttps": true,
          "routes": {
            "apiPrefix": "/.auth"
          }
        }
      }
    }
  ],
  "outputs": {}
}